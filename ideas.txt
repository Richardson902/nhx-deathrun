

update running model



Richardson902: @workspace is there anything that is SetModel?

Workspace: Yes, the [`SetModel`](command:_github.copilot.openSymbolFromReferences?%5B%22SetModel%22%2C%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A97%2C%22character%22%3A14%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A166%2C%22character%22%3A14%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A248%2C%22character%22%3A23%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A269%2C%22character%22%3A23%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A290%2C%22character%22%3A23%7D%7D%5D%5D "Go to definition") method is defined in several classes within the `ModelInspector` class in [`../../../../../../../g:/SteamLibrary/steamapps/common/sbox/addons/tools/Code/Inspectors/ModelInspector.cs`](command:_github.copilot.openRelativePath?%5B%7B%22scheme%22%3A%22file%22%2C%22authority%22%3A%22%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22query%22%3A%22%22%2C%22fragment%22%3A%22%22%7D%5D "g:\SteamLibrary\steamapps\common\sbox\addons\tools\Code\Inspectors\ModelInspector.cs"):

1. `ModelInspector.AnimationList`:
    ```csharp
    public override void SetModel( Model model )
    {
        Items = Enumerable.Range( 0, model.AnimationCount )
            .Select( model.GetAnimationName )
            .OrderBy( x => x )
            .ToList();

        ListView.SetItems( Items );
    }
    ```

2. `ModelInspector.AttachmentList`:
    ```csharp
    public override void SetModel( Model model )
    {
        Items = Enumerable.Range( 0, model.AttachmentCount )
            .Select( model.GetAttachmentName )
            .OrderBy( x => x )
            .ToList();

        ListView.SetItems( Items );
    }
    ```

3. `ModelInspector.BoneList`:
    ```csharp
    public void SetModel( Model model )
    {
        Model = model;

        SetItems();
    }
    ```

4. `ModelInspector.ItemList`:
    ```csharp
    public abstract void SetModel( Model model );
    ```

Additionally, the [`SetModel`](command:_github.copilot.openSymbolFromReferences?%5B%22SetModel%22%2C%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A97%2C%22character%22%3A14%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A166%2C%22character%22%3A14%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A248%2C%22character%22%3A23%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A269%2C%22character%22%3A23%7D%7D%2C%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A290%2C%22character%22%3A23%7D%7D%5D%5D "Go to definition") method is called in the [`SetAsset`](command:_github.copilot.openSymbolFromReferences?%5B%22SetAsset%22%2C%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22g%3A%5C%5CSteamLibrary%5C%5Csteamapps%5C%5Ccommon%5C%5Csbox%5C%5Caddons%5C%5Ctools%5C%5CCode%5C%5CInspectors%5C%5CModelInspector.cs%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fg%253A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22path%22%3A%22%2Fg%3A%2FSteamLibrary%2Fsteamapps%2Fcommon%2Fsbox%2Faddons%2Ftools%2FCode%2FInspectors%2FModelInspector.cs%22%2C%22scheme%22%3A%22file%22%7D%2C%22pos%22%3A%7B%22line%22%3A88%2C%22character%22%3A13%7D%7D%5D%5D "Go to definition") method of the `ModelInspector` class:
```csharp
public void SetAsset( Asset asset )
{
    Model = asset.LoadResource<Model>();
    if ( Model == null || Model.IsError )
        return;

    if ( Model.AnimationCount > 0 )
    {
        AnimationGroup.Visible = true;
        Animations.SetModel( Model );
    }

    var animgraph = Model.AnimGraph;
    if ( animgraph != null && animgraph.ParamCount > 0 )
    {
        ParameterGroup.Visible = true;
        Parameters.SetGraph( animgraph );
    }

    if ( Model.AttachmentCount > 0 )
    {
        AttachmentGroup.Visible = true;
        Attachments.SetModel( Model );
    }

    if ( Model.BoneCount > 0 )
    {
        SkeletonGroup.Visible = true;
        Bones.SetModel( Model );
    }

    AnimationGroup.Update();
    ParameterGroup.Update();
    AttachmentGroup.Update();
    SkeletonGroup.Update();
}
```

Richardson902: how can I make it in my code so I can have a player choose a model to be instead of assigning one on the skinend model renderer in the game?

GitHub Copilot: To allow a player to choose a model in your game, you can follow these steps:

1. **Create a UI for Model Selection**: Provide a user interface where players can select a model. This could be a dropdown menu, a list, or any other UI element.

2. **Store Available Models**: Maintain a list of available models that players can choose from.

3. **Handle Model Selection**: When a player selects a model, update the player's model accordingly.

4. **Update the Player's Model**: Apply the selected model to the player character.

Here's a step-by-step plan and code example:

### Step-by-Step Plan

1. **Create a List of Models**:
    - Define a list of available models.
2. **Create a UI for Model Selection**:
    - Implement a UI element for model selection.
3. **Handle Model Selection**:
    - Add event listeners to handle model selection changes.
4. **Update the Player's Model**:
    - Update the player's model based on the selection.

### Code Example

#### 1. Define a List of Models
```csharp
public class ModelManager
{
    public static List<string> AvailableModels = new List<string>
    {
        "models/player/model1.vmdl",
        "models/player/model2.vmdl",
        "models/player/model3.vmdl"
    };
}
```

#### 2. Create a UI for Model Selection
Assuming you have a UI framework in place, create a dropdown menu for model selection.

```csharp
// Pseudo-code for UI creation
Dropdown modelDropdown = new Dropdown();
modelDropdown.AddOptions(ModelManager.AvailableModels);
modelDropdown.onValueChanged.AddListener(OnModelSelected);
```

#### 3. Handle Model Selection
```csharp
void OnModelSelected(int index)
{
    string selectedModel = ModelManager.AvailableModels[index];
    UpdatePlayerModel(selectedModel);
}
```

#### 4. Update the Player's Model
```csharp
void UpdatePlayerModel(string modelPath)
{
    player.SetModel(modelPath);
}
```

### Integrate with Existing Code

You can integrate the model selection logic into your existing `ViewModelHandler` class. Here's an example of how you might do this:

```csharp
public class ViewModelHandler
{
    private Player player;
    private bool ToggleCrouch = false;
    private Vector3 targetVectorPos;
    private Vector3 targetVectorRot;

    // Constructor or initialization method
    public ViewModelHandler(Player player)
    {
        this.player = player;
        InitializeModelSelectionUI();
    }

    void InitializeModelSelectionUI()
    {
        // Pseudo-code for UI creation
        Dropdown modelDropdown = new Dropdown();
        modelDropdown.AddOptions(ModelManager.AvailableModels);
        modelDropdown.onValueChanged.AddListener(OnModelSelected);
    }

    void OnModelSelected(int index)
    {
        string selectedModel = ModelManager.AvailableModels[index];
        UpdatePlayerModel(selectedModel);
    }

    void UpdatePlayerModel(string modelPath)
    {
        player.SetModel(modelPath);
    }

    void Update()
    {
        // Perform a "breathing" animation
        var breatheTime = RealTime.Now * 2.0f;
        targetVectorPos -= new Vector3(MathF.Cos(breatheTime / 4.0f) / 8.0f, 0.0f, -MathF.Cos(breatheTime / 4.0f) / 32.0f);
        targetVectorRot -= new Vector3(MathF.Cos(breatheTime / 5.0f), MathF.Cos(breatheTime / 4.0f), MathF.Cos(breatheTime / 7.0f));

        // Crouching animation
        if (Input.Down(InputButtonHelper.Duck) || ToggleCrouch)
            ApplyCrouchAnimation();

        if (Input.Pressed(InputButtonHelper.ToggleDuck))
        {
            ToggleCrouch = !ToggleCrouch;
        }

        // Reset ToggleCrouch if player is not crouching
        if (!player.IsCrouching)
        {
            ToggleCrouch = false;
        }
    }

    void ApplyCrouchAnimation()
    {
        targetVectorPos += new Vector3(-1.0f, -1.0f, 0.5f);
    }

    void HandleWalkAnimation()
    {
        var breatheTime = RealTime.Now * 16.0f;
        var walkSpeed = new Vector3(player.Velocity.x, player.Velocity.y, 0.0f).Length;
        var maxWalkSpeed = 200.0f;
    }
}
```

This example assumes you have a `Player` class with a `SetModel` method and a UI framework that supports dropdown menus. Adjust the code to fit your specific game engine and framework.



could have a prefab for every model, change the body on the player to the model - check createmodels in weapon class for reference